plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'
    id "com.google.protobuf" version '0.8.16'
}

android {
    namespace 'com.example.note'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.note"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"
                ]
            }
        }
        testInstrumentationRunner "com.example.note.mock.CustomTestRunner"
    }

    buildTypes {
        debug {
            pseudoLocalesEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.4'
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/AL2.0', 'META-INF/LGPL2.1']
        }
    }
}

dependencies {

    // Compose
    implementation 'androidx.compose.ui:ui:1.4.0'
    implementation 'androidx.compose.ui:ui-tooling:1.4.0'
    implementation 'androidx.compose.foundation:foundation:1.4.0'
    implementation "androidx.navigation:navigation-compose:2.5.3"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    implementation 'androidx.activity:activity-compose:1.7.0'
    implementation 'androidx.compose.material3:material3:1.0.1'
    implementation 'androidx.compose.material:material:1.4.0'
    implementation 'androidx.compose.material:material-icons-extended:1.4.0'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.4.0'

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    // Dagger Hilt
    implementation 'com.google.dagger:hilt-android:2.45'
    kapt 'com.google.dagger:hilt-compiler:2.45'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.45'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.45'

    // Room
    implementation 'androidx.room:room-runtime:2.5.1'
    implementation 'androidx.room:room-ktx:2.5.1'
    kapt 'androidx.room:room-compiler:2.5.1'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    // DataStore
    implementation "androidx.datastore:datastore:1.0.0"
    implementation 'com.google.protobuf:protobuf-javalite:3.15.3'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:31.4.0')

    // Unit testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'io.mockk:mockk:1.13.4'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"

    // instrumentation testing
    androidTestImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.8.20'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

kapt {
    correctErrorTypes true
}

protobuf {
    protoc {
        if (osdetector.os == "osx") {
            artifact = 'com.google.protobuf:protoc:3.10.0:osx-x86_64'
        } else {
            artifact = 'com.google.protobuf:protoc:3.10.0'
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}
